"""initial tables

Revision ID: a5a5487dbef2
Revises: 
Create Date: 2025-07-11 16:56:31.548239

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a5a5487dbef2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Chats',
    sa.Column('chat_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('chat_name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('chat_type', sa.String(length=20), nullable=False),
    sa.Column('creator_user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.CheckConstraint("chat_type IN ('private', 'group', 'channel')"),
    sa.PrimaryKeyConstraint('chat_id')
    )
    op.create_table('PaymentMethods',
    sa.Column('payment_method_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('payment_method_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Roles',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.Column('role_description', sa.Text(), nullable=True),
    sa.CheckConstraint("role_name IN ('owner', 'admin', 'moderator', 'muted')"),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('Users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('Admins',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('BannedUsers',
    sa.Column('ban_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('banned_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('unban_at', sa.DateTime(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('ban_id')
    )
    op.create_table('BlockchainBlocks',
    sa.Column('block_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('previous_hash', sa.CHAR(length=64), nullable=False),
    sa.Column('block_hash', sa.CHAR(length=64), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('nonce', sa.BigInteger(), nullable=False),
    sa.Column('creator_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('block_id'),
    sa.UniqueConstraint('block_hash')
    )
    op.create_table('ChatMembers',
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['Chats.chat_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('chat_id', 'user_id')
    )
    op.create_table('ChatUserRoles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['Chats.chat_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['Roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Contacts',
    sa.Column('contact_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contact_user_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('contact_id')
    )
    op.create_table('Email_verifications',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('verification_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('Notifications',
    sa.Column('notification_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_content', sa.Text(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('Payments',
    sa.Column('payment_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('payment_method_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['payment_method_id'], ['PaymentMethods.payment_method_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('UserKeys',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('public_key', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('UserSettings',
    sa.Column('setting_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('setting_key', sa.String(length=50), nullable=False),
    sa.Column('setting_value', sa.String(length=255), nullable=False),
    sa.Column('edited_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('setting_id')
    )
    op.create_table('BlockchainTransactions',
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=True),
    sa.Column('payload_hash', sa.CHAR(length=64), nullable=False),
    sa.Column('signature', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['BlockchainBlocks.block_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['chat_id'], ['Chats.chat_id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['Users.user_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('BlockchainFiles',
    sa.Column('file_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('file_url', sa.Text(), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('encrypted_key', sa.Text(), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('thumbnail_base64', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['BlockchainTransactions.transaction_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('file_id')
    )
    op.create_table('BlockchainPayloads',
    sa.Column('payload_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_data', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['BlockchainTransactions.transaction_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payload_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('BlockchainPayloads')
    op.drop_table('BlockchainFiles')
    op.drop_table('BlockchainTransactions')
    op.drop_table('UserSettings')
    op.drop_table('UserKeys')
    op.drop_table('Payments')
    op.drop_table('Notifications')
    op.drop_table('Email_verifications')
    op.drop_table('Contacts')
    op.drop_table('ChatUserRoles')
    op.drop_table('ChatMembers')
    op.drop_table('BlockchainBlocks')
    op.drop_table('BannedUsers')
    op.drop_table('Admins')
    op.drop_table('Users')
    op.drop_table('Roles')
    op.drop_table('PaymentMethods')
    op.drop_table('Chats')
    # ### end Alembic commands ###
